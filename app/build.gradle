plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.devtools.ksp'
}

android {
    namespace 'gg.jrg.audiminder'
    compileSdk 33

    defaultConfig {
        applicationId "gg.jrg.audiminder"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "gg.jrg.audiminder.HiltTestRunner"
        manifestPlaceholders = [redirectSchemeName: "audiminder", redirectHostName: "audiminder-auth"]

        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())

        buildConfigField "String", "SPOTIFY_CLIENT_ID", "\"${properties.getProperty("SPOTIFY_CLIENT_ID")}\""
        buildConfigField "String", "SPOTIFY_REDIRECT_URI", "\"${properties.getProperty("SPOTIFY_REDIRECT_URI")}\""
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            packagingOptions {
                exclude 'META-INF/*.kotlin_module'
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }
    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests {
            returnDefaultValues = true
        }
    }
}

ext {
    androidxCoreVersion = '1.10.0'
    appCompatVersion = '1.6.1'
    materialVersion = '1.8.0'
    constraintLayoutVersion = '2.1.4'
    navigationVersion = '2.5.3'
    junitExtVersion = '1.1.5'
    testRunnerVersion = '1.5.2'
    lifecycleVersion = '2.6.1'
    securityCryptoVersion = '1.1.0-alpha05'
    junitVersion = '4.13.2'
    coroutinesVersion = '1.6.0'
    espressoVersion = '3.5.1'
    spotifyAuthVersion = '2.0.2'
    spotifyWebApiKotlinVersion = '3.8.8'
    timberVersion = '5.0.1'
    recyclerviewVersion = '1.3.0'
    coroutinesAndroidVersion = '1.6.4'
    turbineVersion = '0.12.3'
    mockitoCoreVersion = '5.2.0'
    mockitoKotlinVersion = '4.1.0'
    fragmentTestingVersion = '1.6.0-beta01'
    hiltVersion = '2.45'
    testCoreVersion = '1.5.0'
    testRulesVersion = '1.5.0'
    truthVersion = '1.5.0'
    browserVersion = '1.5.0'
    roomVersion = '2.5.1'
}

dependencies {
    // AndroidX
    implementation "androidx.core:core-ktx:$androidxCoreVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerviewVersion"
    implementation "androidx.browser:browser:$browserVersion"

    // Material
    implementation "com.google.android.material:material:$materialVersion"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-testing:$navigationVersion"

    // Unit Testing
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "app.cash.turbine:turbine:$turbineVersion"
    testImplementation "org.mockito:mockito-core:$mockitoCoreVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"
    debugImplementation "androidx.fragment:fragment-testing:$fragmentTestingVersion"

    // Instrumented Testing
    androidTestImplementation "androidx.test.ext:junit:$junitExtVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "org.mockito:mockito-android:$mockitoCoreVersion"
    androidTestImplementation "androidx.test:core:$testCoreVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test:rules:$testRulesVersion"
    androidTestImplementation "androidx.test.ext:junit:$junitExtVersion"
    androidTestImplementation "androidx.test.ext:truth:$truthVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltVersion"
    androidTestImplementation "androidx.test.ext:truth:$truthVersion"

    // Spotify
    implementation "com.adamratzman:spotify-api-kotlin-core:$spotifyWebApiKotlinVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesAndroidVersion"

    // Hilt (Dagger)
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-compiler:$hiltVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltVersion"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    ksp "androidx.room:room-compiler:$roomVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"
}

kapt {
    correctErrorTypes true
}

ksp {
    arg("room.schemaLocation", "$projectDir/schemas")
}

allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}